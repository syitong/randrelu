#!/bin/sh

####  PBS preamble

#PBS -N NN1test
#PBS -M syitong@umich.edu
#PBS -m abe

# Change the number of cores (ppn=1), amount of memory, and walltime:
#PBS -l procs=1,mem=4gb,walltime=04:10:00
#PBS -j oe
#PBS -V
#PBS -t 0-9

# Change "example_flux" to the name of your Flux allocation:
#PBS -A tewaria_flux
#PBS -q flux
#PBS -l qos=flux

####  End PBS preamble

#  Show list of CPUs you ran on, if you're running under PBS
if [ -n "$PBS_NODEFILE" ]; then cat $PBS_NODEFILE; fi

#  Change to the directory you submitted from
if [ -n "$PBS_O_WORKDIR" ]; then cd $PBS_O_WORKDIR; fi

#  Put your job commands here:
# Params screen for RF
# for N in 20 40 80 160 320 640 1280 2560 5120
# do
#     python experiments.py --N ${N} --trial ${PBS_ARRAYID} --file eldan-RF-params
#     wait
# done
# Test for RF
# for N in 20 40 80 160 320 640 1280 2560 5120
# do
#     python experiments.py --dataset eldan --model RF --N ${N} --H 1 --trial ${PBS_ARRAYID}
#     wait
# done
# Test for NN1
# for N in 20 40 80 160 320 640 1280 2560 5120
# do
#     python experiments.py --dataset eldan --model NN --N ${N} --H 1 --trial ${PBS_ARRAYID}
#     wait
# done
# Params screen for NN2
for N in 7 11 17 25 37 54 77 110 157
do
        python experiments.py --N ${N} --trial ${PBS_ARRAYID} --file eldan-NN-params
        wait
    python result_alloc.py --file eldan-NN-params --N ${N}
    wait
done
for N in 7 11 17 25 37 54 77 110 157
do
    python result_alloc.py --file eldan-NN-params --N ${N}
    wait
done
